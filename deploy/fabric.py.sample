#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) Pootle contributors.
#
# This file is a part of the Pootle project. It is distributed under the GPL3
# or later license. See the LICENSE file for a copy of the license and the
# AUTHORS file for copyright and authorship information.

"""Fabric settings file."""


def get_settings(overrides={}):
    """Returns a dictionary with settings for Fabric.

    It admits overriding some of the values on the settings through a
    parameter. Right now it is only possible to override: 'db_name',
    'project_name' and 'project_url'.

    :param overrides: Dictionary with values for some options.
    """
    SETTINGS = {}


    #
    # SSH connection for Fabric
    #

    #: List of hosts to work on
    SETTINGS['hosts'] = ['foo.example.com']
    #: Username to log in in the remote machine
    SETTINGS['user'] = 'foobarbaz'


    #
    # Database
    #

    #: Database name
    SETTINGS['db_name'] = overrides.get('db_name', 'pootle')

    # Database user will be used both for Pootle settings and for any command
    # that needs it, e.g. create_db.
    SETTINGS['db_user'] = 'pootle'

    # Password for db_user - included in Pootle settings, and ~user/.my.cnf if
    # you create that with mysql_conf().  If you don't enable the corresponding
    # option below, you will be prompted for a password for all database
    # operations.
    SETTINGS['db_password'] = 'SET_DB_PASSWORD_HERE'

    # Password for root DB user - included in ~user/.my.cnf if you create that
    # with mysql_conf().  If you don't enable the corresponding option below,
    # you will be prompted for a password for database creation (only).
    SETTINGS['db_root_password'] = 'SET_ROOT_DB_PASSWORD_HERE'

    # Command option for DB password.  The default ('-p') option will prompt
    # you for the password.  The alternate ('' - i.e. empty) can be used to
    # avoid password prompting, but only after you have run mysql_conf(), e.g.
    # `fab settings mysql_conf` to set up user's .my.cnf file.
    SETTINGS['db_password_opt'] = '-p'
    #SETTINGS['db_password_opt'] = ''

    # Command option for root DB password. The default ('-p') option will
    # prompt you for the password. The alternate
    # ('--defaults-group-suffix=_root') can be used to avoid password
    # prompting, but only after you have run mysql_conf(), e.g.
    # `fab settings mysql_conf` to set up user's .my.cnf file.
    SETTINGS['db_root_password_opt'] = '-p'
    #SETTINGS['db_root_password_opt'] = '--defaults-group-suffix=_root'


    #
    # Project
    #

    #: A meaningful name for your Pootle installation
    SETTINGS['project_name'] = overrides.get('project_name', 'my-pootle')
    #: This URL will be used in the VirtualHost section
    SETTINGS['project_url'] = overrides.get('project_url',
                                            'my-pootle.example.com')
    # Change the first path part if your Apache websites are stored somewhere
    # else.
    SETTINGS['project_path'] = '/var/www/sites/%(project_name)s' % SETTINGS


    #
    # The rest of the settings probably won't need any changes
    #

    SETTINGS['project_repo_path'] = '%(project_path)s/src' % SETTINGS
    SETTINGS['project_repo'] = overrides.get('project_repo',
        'git://github.com/translate/pootle.git')

    SETTINGS['project_settings_path'] = ('%(project_repo_path)s/pootle/'
                                         'settings' % SETTINGS)
    SETTINGS['translations_path'] = '%(project_path)s/translations' % SETTINGS
    SETTINGS['repos_path'] = '%(project_path)s/repos' % SETTINGS


    #
    # Testing database
    #

    # Name of the database that will be copied for feature testing deployment.
    # This database must exist and the database user listed above must have
    # enough rights to dump it.
    SETTINGS['source_db'] = 'pootle-staging'


    #
    # Secret key
    #

    from base64 import b64encode
    from os import urandom
    SETTINGS['secret_key'] = b64encode(urandom(50))


    #
    # Virtualenv
    #

    #: Python version that will be used in the virtualenv
    SETTINGS['python'] = 'python2.6'
    SETTINGS['env_path'] = '%(project_path)s/env' % SETTINGS


    #
    # Apache + VirtualHost + WSGI
    #

    #: The group your web server is running on
    SETTINGS['server_group'] = 'www-data'
    SETTINGS['vhost_file'] = ('/etc/apache2/sites-available/%(project_name)s' %
                              SETTINGS)
    SETTINGS['wsgi_file'] = '%(project_path)s/pootle.wsgi' % SETTINGS

    return SETTINGS
